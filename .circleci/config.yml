version: 2.1

jobs:
  formatting:
    docker:
      - image: glacialengineering/solana-build:0.19.0.1
    steps:
      - checkout
      - run:
          name: "Format rust code"
          command: "cd anchor-bpf && cargo fmt --all -- --check"
      - run:
          name: "Check rust code"
          command: "cd anchor-bpf && cargo clippy -- -D warnings --warn clippy::all"
  security-check:
    docker:
      - image: glacialengineering/solana-build:0.19.0.1
    steps:
      - checkout
      - run:
          name: "Soteria analysis"
          command: "cd anchor-bpf && cd programs/`ls programs/` && soteria -analyzeAll ."
      - run:
          name: "Cargo audit"
          command: "cd anchor-bpf && cargo audit"
  test:
    docker:
      - image: glacialengineering/solana-build:0.19.0.1
    steps:
      - checkout
      - run:
          name: "Unit tests"
          command: "cd anchor-bpf && cargo test --lib"
      - run:
          name: "Anchor tests"
          command: |
            cd anchor-bpf
            solana-keygen new -s --no-bip39-passphrase
            npm install
            anchor test -- --features local-testing,test-id
      - store_artifacts:
          path: /root/project/.anchor/program-logs
          destination: program-logs
  build:
    docker:
      - image: glacialengineering/solana-build:0.19.0.1
    steps:
      - checkout
      - run:
          name: "Build program"
          command: "cd anchor-bpf && anchor build && rm ./target/deploy/*.json && cd ./target/deploy && sha256sum * > sha256.txt"
      - store_artifacts:
          path: /root/project/target/deploy
          destination: bpf-programs
      - store_artifacts:
          path: /root/project/target/idl
          destination: idls
      - store_artifacts:
          path: /root/project/target/types
          destination: types
  deploy-devnet:
    docker:
      - image: glacialengineering/solana-build:0.19.0.1
    steps:
      - checkout
      - run:
          name: "Deploy"
          command: |
            cd anchor-bpf
            echo "$SOLANA_DEV_PROGRAM_KEY" > program-key.json
            echo "$SOLANA_DEV_AUTHORITY_KEY" > auth-key.json
            anchor build -- --features test-id
            export PGM=`ls ./target/deploy/*.so`
            echo "deploying $PGM"
            solana program deploy -u d -k ./auth-key.json --program-id ./program-key.json $PGM

workflows:
  dev-deploy:
    when:
      equal: [ dev-deploy, << pipeline.git.branch >> ]
    jobs:
      - build
      - approve-deploy-devnet:
          type: approval
          requires:
            - build
      - deploy-devnet:
          requires:
            - approve-deploy-devnet
  build-test:
    when:
      not:
        equal: [ dev-deploy, << pipeline.git.branch >> ]
    jobs:
      - formatting
      - security-check
      - test
      - build
